properties([
        [$class: 'ParametersDefinitionProperty',
         parameterDefinitions: [
                 stringParameter("hostName","Host name","xxxxx"),
                 choice(choices: ['env1', 'env2', 'env3'], description: 'Environment to deploy', name: 'environment')
         ]
        ]
])

def stringParameter(name, description, defaultValue="") {
    return [ name: name, description: description, $class: 'StringParameterDefinition', defaultValue: defaultValue]
}

node () {
    stage ('Init') {
        sh """
        pwd
        ls -l
        find -type f
        """

    }

}

def installIngress(awsCredential) {
    withAWS(credentials: awsCredential.credential, role: awsCredential.role, region: awsCredential.region) {
        withEnv(["KUBECONFIG=${env.WORKSPACE}/.${env.cluster}/.kube/config"]) {
            dir('deploy/app1') {
                sh """
                    echo "######"
                    pwd
                    echo "######"
                    aws sts get-caller-identity
                    echo "######"
                    aws eks update-kubeconfig --name ${awsCredential.cluster}
                    echo "######"

                    kubectl get pods -A
                    echo "######"
                    helm list -A
                    echo "######"
                """
            }
        }
    }
}




